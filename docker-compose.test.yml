# ==========================================
# üß™ GymBro Platform - Test Environment
# ==========================================
# Docker Compose per eseguire test in ambiente isolato

version: '3.8'

services:
  # ==========================================
  # üóÑÔ∏è Test Database
  # ==========================================
  test-postgres:
    image: postgres:15-alpine
    container_name: gymbro-test-postgres
    environment:
      POSTGRES_DB: gymbro_test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # ==========================================
  # üîÑ Test Redis
  # ==========================================
  test-redis:
    image: redis:7-alpine
    container_name: gymbro-test-redis
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - test_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  # ==========================================
  # üß™ Test User Management Service
  # ==========================================
  test-user-management:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    container_name: gymbro-test-user-management
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@test-postgres:5432/gymbro_test_db
      - REDIS_URL=redis://test-redis:6379
      - JWT_SECRET=test-secret-key-for-integration-tests
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRE_MINUTES=60
      - APP_NAME=GymBro Test
      - SENTRY_DSN=  # Disabled for tests
      - LOG_LEVEL=DEBUG
    ports:
      - "8011:8000"  # Different port for testing
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - test-network
    volumes:
      - ./services/user-management:/app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  test_postgres_data:
    driver: local
  test_redis_data:
    driver: local

networks:
  test-network:
    driver: bridge
    name: gymbro-test-network
