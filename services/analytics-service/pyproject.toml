[tool.poetry]
name = "gymbro-analytics-service"
version = "0.1.0"
description = "GymBro Platform - Analytics Service with time-series fitness data analytics"
authors = ["GymBro Team <dev@gymbro.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"

# FastAPI Framework - DUAL API ARCHITECTURE
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}

# GraphQL - Apollo Federation MANDATORY
strawberry-graphql = {extras = ["fastapi"], version = "^0.215.1"}

# Database ORM - STANDARD STACK
sqlalchemy = "^2.0.23"
asyncpg = "^0.30.0"
alembic = "^1.12.1"

# HTTP Client - Service Communication
httpx = "^0.25.0"

# Validation - PYDANTIC V2 ONLY
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# Security & Authentication - STANDARD STACK
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"

# Time-Series Analytics - DOMAIN SPECIFIC
pandas = "^2.1.4"
numpy = "^1.25.2"

# Monitoring + Logging - STANDARD STACK
sentry-sdk = {extras = ["fastapi"], version = "^1.38.0"}
structlog = "^23.2.0"

# Utilities - STANDARD STACK
email-validator = "^2.1.0"
redis = "^5.0.1"

[tool.poetry.group.dev.dependencies]
# Testing - MANDATORY COVERAGE
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"

# Code Quality - MANDATORY FORMATTING
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

# Testing Utilities
factory-boy = "^3.3.0"

[tool.poetry.group.test.dependencies]
# Test Database
pytest-postgresql = "^5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ===== TOOL CONFIGURATION - STANDARDIZED =====

[tool.black]
line-length = 79
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | alembic
)/
'''

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 79
extend-ignore = ["E203", "W503", "E501"]
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "alembic",
    "migrations",
    ".pytest_cache",
    ".mypy_cache"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "alembic/",
    "migrations/",
    "tests/"
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config --cov=app --cov-report=term-missing --cov-fail-under=80"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/alembic/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
