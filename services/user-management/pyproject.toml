[tool.poetry]
name = "gymbro-user-management"
version = "1.0.0"
description = "GymBro Platform - User Management Service"
authors = ["GymBro Team <team@gymbro-platform.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11,<4.0"
fastapi = "^0.116.0"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
pydantic = {extras = ["email"], version = "^2.11.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.43"}
asyncpg = "^0.30.0"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.20"
sentry-sdk = {extras = ["fastapi"], version = "^2.34.0"}
structlog = "^24.4.0"
email-validator = "^2.2.0"
pydantic-settings = "^2.10.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
httpx = "^0.28.1"
black = "^25.1.0"
isort = "^6.0.0"
flake8 = "^7.3.0"
mypy = "^1.17.0"
pre-commit = "^4.0.1"
factory-boy = "^3.3.0"

[tool.poetry.group.test.dependencies]
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.0"
coverage = "^7.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "passlib.*",
    "jose.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2
